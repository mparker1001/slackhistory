#!/usr/bin/php
<?php
/* This script will pull the entire message history of a slack channel

The Slack API token should be stored as an environment variable called SLACK_API_TOKEN

*/

// Check and set arguments. If they don't exist, then stop the script
if (@$argv[1] == "") {
  die("Usage: slackhistory <channel_name>\n");
}
else {
	$channel = $argv[1];
}

// Set API token
$token = getenv('SLACK_API_TOKEN');

// Initialize finished variable
$has_more = false;

// Set number of messages to max
$count = 1000;

// Include the first message by default on the first run
$inclusive = 1;

// Start with now being the default start time range
$latest = time();


/* --- Pull User Names -- */

// Set Slack API Endpoint
$apiendpoint = "https://slack.com/api/users.list";

$fields = array(
  'token' => urlencode($token),
);

//url-ify the data for the POST
foreach($fields as $key=>$value) { $fields_string .= $key.'='.$value.'&'; }
rtrim($fields_string, '&');

//open connection
$ch = curl_init();

//set the url, number of POST vars, POST data
curl_setopt($ch,CURLOPT_URL, $apiendpoint);
curl_setopt($ch,CURLOPT_POST, count($fields));
curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
curl_setopt($ch,CURLOPT_RETURNTRANSFER, true);

//execute post
$result = json_decode(curl_exec($ch));

$userlist = array();

foreach ($result->members as $member ) {
  $userlist[$member->id] = $member->real_name;
}

//close connection
curl_close($ch);


/* --- Pull Slack Data -- */

// Set Slack API Endpoint
$apiendpoint = "https://slack.com/api/groups.history";

do {

  $fields = array(
    'token' => urlencode($token),
    'channel' => urlencode($channel),
    'count' => urlencode($count),
    'inclusive' => urlencode($inclusive),
    'latest' => urlencode($latest)
  );

  //url-ify the data for the POST
  foreach($fields as $key=>$value) { $fields_string .= $key.'='.$value.'&'; }
  rtrim($fields_string, '&');

  //open connection
  $ch = curl_init();

  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $apiendpoint);
  curl_setopt($ch,CURLOPT_POST, count($fields));
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true);

  //execute post
  $result = json_decode(curl_exec($ch));

  //close connection
  curl_close($ch);

  foreach ($result->messages as $message ) {  
    if ( $message->subtype == "" ) {  //Only display messages without a subtype since these are actual user typed messages
      echo $message->ts."\t".$userlist[$message->user]."\t".$channel."\n";
    }
    $latest = $message->ts;
  }

  $has_more = $result->has_more;
  $inclusive = 0;

} while ( $has_more == true );

?>
